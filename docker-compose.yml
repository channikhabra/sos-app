version: '3.6'
services:
  postgres:
    image: postgres:12
    volumes:
    - ./docker-volumes/postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: sos
      POSTGRES_PASSWORD: sos
      POSTGRES_DATABASE: sos

  redis:
    image: redis:alpine
    volumes:
      - ./docker-volumes/redis:/data

  pgadmin:
    image: dpage/pgadmin4
    depends_on:
    - postgres
    ports:
    - 5050:80
    volumes:
      - "./pgadmin-config.py:/pgadmin4/config_local.py"
      - "./docker-volumes/pgadmin:/var/lib/pgadmin4"
    logging:
      driver: none
    environment:
      PGADMIN_DEFAULT_EMAIL: sos@sos.com
      PGADMIN_DEFAULT_PASSWORD: sos

  hasura:
    image: hasura/graphql-engine:v1.2.1
    ports:
    - "8080:8080"
    depends_on:
    - "postgres"
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://sos:sos@postgres:5432/sos
      HASURA_GRAPHQL_ENABLE_CONSOLE: "false"
      HASURA_GRAPHQL_ADMIN_SECRET: myadminsupersecretkey
      HASURA_GRAPHQL_AUTH_HOOK: http://sidecar:8080/v1/api/authenticate
      HASURA_GRAPHQL_AUTH_HOOK_MODE: GET
      NEW_USER_WEBHOOK: http://sidecar:8080/v1/api/on-new-user
      NEW_EMPLOYEE_WEBHOOK: http://sidecar:8080/v1/api/on-new-employee

  sidecar:
    build: ./sidecar
    ports:
      - "4000:80"
    environment:
      GRAPHQL_PORT: 80
      REST_PORT: 8080
      DATABASE_URL: postgres://sos:sos@postgres:5432/sos
      SOS_ADMIN_EMAILS: "admin@test.com"
    volumes:
      - "./sidecar/:/app"
      - /app/node_modules
    depends_on:
      - postgres
      - redis
      - hasura
    command: yarn dev

  ui:
    build: ./ui
    ports:
      - "3000:3000"
    environment:
      PORT: "3000"
    volumes:
      - ./ui:/app
      - /app/node_modules
    command: yarn dev
