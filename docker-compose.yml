version: '3.6'
services:
  postgres:
    image: postgres:12
    volumes:
    - ./docker-volumes/postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: sos
      POSTGRES_PASSWORD: sos
      POSTGRES_DATABASE: sos

  gateway:
    build: ./gateway
    volumes:
      - ./gateway/gateway.conf:/etc/nginx/conf.d/default.conf
    ports:
      - 5000:80
    depends_on:
      - hasura
      - pgadmin
      - ui
      - minio

  redis:
    image: redis:alpine
    volumes:
      - ./docker-volumes/redis:/data

  pgadmin:
    image: dpage/pgadmin4
    ports:
    - 5050:80
    volumes:
      - "./docker-volumes/pgadmin:/var/lib/pgadmin4"
    environment:
      PGADMIN_DEFAULT_EMAIL: sos@sos.com
      PGADMIN_DEFAULT_PASSWORD: sos
    depends_on:
    - postgres

  minio:
    image: minio/minio:RELEASE.2020-06-14T18-32-17Z
    volumes:
      - ./docker-volumes/minio:/data
    environment:
      PORT: 80
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
    command: server /data/minio
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/storage/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  hasura:
    image: hasura/graphql-engine:v1.3.2
    depends_on:
    - "postgres"
    environment:
      PORT: 80
      HASURA_GRAPHQL_DATABASE_URL: postgres://sos:sos@postgres:5432/sos
      HASURA_GRAPHQL_ENABLE_CONSOLE: "false"
      HASURA_GRAPHQL_ADMIN_SECRET: myadminsupersecretkey

      HASURA_GRAPHQL_AUTH_HOOK: http://sidecar/v1/api/authenticate
      HASURA_GRAPHQL_AUTH_HOOK_MODE: GET
      NEW_USER_WEBHOOK: http://sidecar/v1/api/on-new-user
      NEW_EMPLOYEE_WEBHOOK: http://sidecar/v1/api/on-new-employee
      SIDECAR_GRAPHQL_URL: http://sidecar/v1/graphql
      NEW_PROJECT_WEBHOOK: http://sidecar/v1/api/on-new-project
      NEW_TASK_WEBHOOK: http://sidecar/v1/api/on-new-task
      TASK_STATUS_UPDATE_WEBHOOK: http://sidecar/v1/api/on-task-status-updates
      DELETED_ENTITIES_WEBHOOK: http://sidecar/v1/api/add-deleted-entities

  sidecar:
    build: ./sidecar
    environment:
      PORT: 80
      STORAGE_PORT: 9090
      DATABASE_URL: postgres://sos:sos@postgres:5432/sos
      SOS_ADMIN_EMAILS: "admin@test.com"
      STORAGE_GATEWAY_ENDPOINT: "http://localhost:5000/storage"
      REDISCLOUD_SESSION_URL: redis://redis:6379
    volumes:
      - "./sidecar/:/app"
      - /app/node_modules
    depends_on:
      - postgres
      - redis
      - hasura
    command: yarn dev

  ui:
    build: ./ui
    environment:
      PORT: 80
      CLIENT_GRAPHQL_URL: "http://localhost:5000/hasura/v1/graphql"
      SERVER_GRAPHQL_URL: "http://localhost:5000/hasura/v1/graphql"
      STORAGE_API_URL: "http://localhost:5000/uploads/v1/storage"
      FEEDBACK_FORM_URL: "https://formspree.io/moqpaazn"
    ports:
      - 6006:6006
    volumes:
      - ./ui:/app
      - /app/node_modules
    command: yarn dev
