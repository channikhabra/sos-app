#+title: SoS App

SoS is an insolent app meant for Software Development teams to be more effective
in creating good quality software.

Being an insolent software, you can start using it without waiting on anyone to
adopt it organization wide. Although to get most out of SoS, it is better if you
join along your team.

* MVP

SoS is in early stages of development. In its MVP form, it strives to bring
transparency in your team.

It does so by allowing developers to update their team on:
   - What they are working on today
   - What they accomplished the previous working day
   - Any challenges and impediments they are facing

* Development Setup

Follow this guide to setup an environment for developing SoS app

** Prerequisites

Following must be installed:
1. [[https://www.docker.com/][Docker]]
2. [[https://docs.docker.com/compose/][Docker Compose]]
3. [[https://hasura.io/docs/1.0/graphql/manual/hasura-cli/index.html#installation][Hasura CLI]]

** Setup

1. Create =.env= files

  #+begin_src sh
    # hasura/.env
    export HASURA_GRAPHQL_ADMIN_SECRET=myadminsupersecretkey
  #+end_src

  #+begin_src sh
    # sidecar/.env
    NODE_ENV="development"
    EXPRESS_SESSION_SECRET="EXPRESS_SESSION_SECRET"
    REDISCLOUD_SESSION_URL="redis://redis:6379"
    GRAPHQL_LOGGER=true
    HOSTNAME="localhost"
    SMTP_HOST="smtp.ethereal.email"
    SMTP_PORT="587"
    SMTP_USER="marcia.kirlin65@ethereal.email"
    SMTP_PASSWORD="EN2pw6VzAZnkyzAuDb"
    APP_NAME="SoS App"
  #+end_src

2. *Start the services*
  #+begin_src sh
  cd /path/to/sos-app
  docker-compose up
  #+end_src

3. *Apply [[https://hasura.io/docs/1.0/graphql/manual/migrations/index.html][hasura migration]]*
   #+begin_src sh
     cd ./hasura
     source ./.env
     hasura migrate apply
   #+end_src

   You need to do this when you are starting the app for first time, and any
   time when hasura migrations have been changed.

4. *Restart sidecar*
  #+begin_src sh
  docker-compose restart sidecar
  #+end_src

  You need to do this when you are starting the app for first time.

5. (Optional) *Start hasura console*
  #+begin_src sh
    hasura console
  #+end_src

** Troubleshooting

1. *Services failing to start*: docker-compose don't start the applications in
   any particular order, but sos-app's services need an order when they are
   started for the first time. E.g =postgres= must be up for =hasura= to run its
   migrations. You might need to start some services again with =docker-compose
   restart=; e.g if =postgres= took some time to set itself up, you will likely
   need to restart =hasura=, and hence =sidecar= after that.

2. *Gateway crashing*: Gateway uses nginx, which crashes if any of the proxied
   services is unreachable during startup. This is quite likely to happen during
   initial startup of the app. If this is the case, please check gateway logs to
   see which service is unreachable with =docker-compose logs gateway=, and
   restart it with =docker-compose restart <service>=

** How to access different services?

By default, development server starts at port 5000. We run a reverse-proxy
gateway, which matches different URLs to different services:

1. =/=: UI is accessible at =/=
2. =/uploads=: For uploading and downloading images
3. =/hasura=: Runs the Hasura instance
